# Misc
# ---------------------------------------------------
alias apt='sudo apt'
alias apty='sudo apt install -y'
alias aptr='sudo apt remove -y'
alias aptp='sudo apt purge -y'
alias aptu='(
  apt update \
    && apt upgrade -yV \
    && apt autoclean \
    && apt autoremove -yV \
    && for file in $DOTBRAGA/src/ansible/*; do [[ -f $file ]] && ansible-playbook $file; done
)'

alias aptitude='sudo aptitude'
alias dpkg='sudo dpkg'
alias snap='sudo snap'
alias find='sudo find'

alias ez='exec zsh'
alias ezsh='exec zsh'
alias r="busctl --user call org.gnome.Shell /org/gnome/Shell org.gnome.Shell Eval s 'Meta.restart("'"Restarting"'")'"
alias rm='/bin/rm'
alias watch='watch -n1 '

alias www="cd ${HOME}/www"
alias oss="cd ${HOME}/www/oss"

# Which `ls` app to use. It can be: `ls`, `lsd`, `colorls` or `exa`.
ls_bin='exa'
ls_cmd="LC_COLLATE=C ${ls_bin} --group-directories-first"
alias l="${ls_cmd} -algh"
alias ll="${ls_cmd} -lgh"
alias ls="${ls_cmd} -ag"

alias grep='sudo grep -I --color=auto --exclude-dir={.bzr,CVS,.git,.hg,.svn,.idea,.tox,bin,vendor,node_modules,storage,debugbar} --exclude={xdebug.log}'

bkp() {
  for file in ${@}; do mv ${file} ${file}.bkp; done
}

rst() {
  for file in "$@"; do
    if [[ -f "$file" && $file =~ (.+)\.bkp$ ]]; then
      new_file="${BASH_REMATCH[1]}"
      mv "$file" "$new_file"
      echo "Restored $file to $new_file"
    else
      echo "Error: $file is not a .bkp file or does not exist."
    fi
  done
}
